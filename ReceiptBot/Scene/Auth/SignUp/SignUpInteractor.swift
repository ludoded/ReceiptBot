//
//  SignUpInteractor.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/8/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol SignUpInteractorOutput {
      func presentRegister(response: SignUp.Register.Response)
}

class SignUpInteractor {
    var output: (SignUpInteractorOutput & PasswordRecoveryInteractorOutput)!
    var worker: SignUpWorker!
    
    var email: String!
    var password: String!

    // MARK: - Business logic
    func tryToSignUp(request: SignUp.Register.Request) {
        worker = SignUpWorker(email: request.email ?? "",
                              password: request.password ?? "")
        
        worker.tryToSignUp { [weak self] (resp) in
            DispatchQueue.main.async { self?.pass(data: resp) }
        }
    }
    
    func recoveryPassword(request: PasswordRecoveryModel.Request) {
        let passwordWorker = PasswordRecoveryWorker(with: request.email)
        passwordWorker.tryToRecovery { [weak self] (data) in
            DispatchQueue.main.async { self?.passStatus(data: data) }
        }
    }
    
    /// MARK: passing data
    func pass(data: RebotValueWrapper<SignUpFirstResponse>) {
        let response = SignUp.Register.Response(data: data)
        output.presentRegister(response: response)
    }
    
    func passStatus(data: RebotValueWrapper<StatusDetailResponse>) {
        let response = PasswordRecoveryModel.Response(status: data)
        output.presentRecoveredPassword(response: response)
    }
}
