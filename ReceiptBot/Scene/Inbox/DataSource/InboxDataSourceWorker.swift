//
//  InboxDataSourceWorker.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/7/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

class InboxDataSourceWorker {
    let entityId: Int
    
    init(entityId: Int) {
        self.entityId = entityId
    }
    
    func fetchInvoices(callback: @escaping (RebotValueWrapper<[SyncConvertedInvoiceResponse]>) -> ()) {
        SyncConvertedInvoiceResponse.load(request: API.syncData(with: entityId)) { [unowned self] (invoicesResp, message) in
            guard message == nil else { callback(.none(message: message!)); return }
            guard let invoices = invoicesResp else { callback(.none(message: "Can't parse Sync Invoices Data!")); return }
            
            let filteredInvoices = self.removeExported(from: invoices)
            callback(.value(filteredInvoices))
        }
    }
    
    private func removeExported(from invoices: [SyncConvertedInvoiceResponse]) -> [SyncConvertedInvoiceResponse] {
        let filteredInvoices = invoices.filter({ !($0.type.contains("Exported") || $0.type.contains("Split") || $0.type.contains("Modified")) })
        
        /// Remove duplicates
        var exportedInvoices: [SyncConvertedInvoiceResponse] = []
        for invoice in filteredInvoices where exportedInvoices.index(where: { $0.originalInvoiceId == invoice.originalInvoiceId }) == nil {
            exportedInvoices.append(invoice)
        }
        
        return exportedInvoices
    }
}
