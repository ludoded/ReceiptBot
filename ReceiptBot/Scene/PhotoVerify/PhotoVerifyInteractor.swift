//
//  PhotoVerifyInteractor.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/13/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol PhotoVerifyInteractorOutput {
      func presentFile(response: PhotoVerify.Upload.Response)
}

class PhotoVerifyInteractor {
    var output: PhotoVerifyInteractorOutput!
    var worker: PhotoVerifyWorker!

    // MARK: - Business logic
    func tryToUpload(request: PhotoVerify.Upload.Request) {
        let interval = Int(Date().timeIntervalSince1970)
        let saveName = "\(interval).png"
        let user = AppSettings.shared.user
        let scaledImage = request.image.rebotSize()
        let data = UIImagePNGRepresentation(scaledImage ?? UIImage())?.base64EncodedString()
        
        let params = PhotoVerify.Upload.Params(fileNameToSave: saveName,
                                               fileNameOriginal: saveName,
                                               serverLocation: "D:/",
                                               organisationName: user?.organisationName ?? "",
                                               companyName: user?.organisationName ?? "",
                                               companyId: String(user?.organisationId ?? 0),
                                               userId: "",
                                               fileExtension: ".png",
                                               folderType: "0",
                                               mobileData: data ?? "",
                                               originalInvoiceId: "",
                                               originalInvoiceStatus: "",
                                               filePath: " ")
        worker = PhotoVerifyWorker(params: params)
        worker.uploadFile { [weak self] (resp) in
            self?.passToPresenter(data: resp)
        }
    }
    
    func passToPresenter(data: RebotValueWrapper<FileUploadResponse>) {
        let response = PhotoVerify.Upload.Response(data: data)
        output.presentFile(response: response)
    }
}
