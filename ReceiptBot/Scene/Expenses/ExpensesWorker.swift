//
//  ExpensesWorker.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/5/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import Charts

class ExpensesWorker {
    let entityId: Int
    
    init(entityId: Int) {
        self.entityId = entityId
    }
  
    func fetchLineData(callback: @escaping (RebotValueWrapper<LineChartDataSet>) -> ()) {
        LineChartResponse.loadType(request: API.lineChart(with: entityId)) { (lineResp, message) in
            guard message == nil else { callback(.none(message: message!)); return }
            guard let line = lineResp else { callback(.none(message: "Can't parse Line Data!")); return }
            
            var values: [ChartDataEntry] = []
            
            let lastMonth: Double = Double(line.months.last?.monthYear ?? "0") ?? 0
            
            for month in line.months {
                var monthVal = Double(month.monthYear) ?? 0
                monthVal = monthVal > lastMonth ? monthVal - 12 : monthVal
                values.append(ChartDataEntry(x: monthVal, y: Double(month.totalAmount)))
            }
            
            let dataSet = LineChartDataSet(values: values, label: nil)
            dataSet.colors = [RebotColor.Line.line]
            dataSet.drawValuesEnabled = true
            dataSet.drawCirclesEnabled = true
            dataSet.circleColors = [RebotColor.Line.point]
            dataSet.drawCircleHoleEnabled = true
            dataSet.circleHoleColor = .white
            dataSet.lineWidth = 3.0
            dataSet.fillAlpha = 0.5
            dataSet.fill = Fill(color: RebotColor.Line.fill)
            dataSet.drawFilledEnabled = true
            dataSet.mode = .cubicBezier
            
            callback(.value(dataSet))
        }
    }
}
