//
//  PagerViewController.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/5/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import Material
import XLPagerTabStrip

protocol PagerViewControllerOutput {
    var takenPhoto: UIImage! { get set }
    var viewControllers: [UIViewController] { get }
}

class PagerViewController: ButtonBarPagerTabStripViewController {
    var output: PagerViewControllerOutput!
    var router: PagerRouter!
    
    @IBOutlet weak var barView: ButtonBarView!
    @IBOutlet weak var container: UIScrollView!
    
    @IBAction func showCamera(_ sender: UIBarButtonItem) {
        let alert = UIAlertController(title: "Receipt process", message: "Pick the source", preferredStyle: .actionSheet)
        alert.addAction(UIAlertAction(title: "Camera", style: .default, handler: { [weak self] _ in self?.router.navigateToCamera() }))
        alert.addAction(UIAlertAction(title: "Gallery", style: .default, handler: { [weak self] _ in self?.showPicker() }))
        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
        alert.popoverPresentationController?.barButtonItem = sender
        alert.popoverPresentationController?.permittedArrowDirections = .any
        
        navigationController?.present(alert, animated: true, completion: nil)
    }
    
    override func awakeFromNib() {
        super.awakeFromNib()
        PagerConfigurator.sharedInstance.configure(viewController: self)
    }
    
    override func viewDidLoad() {
        self.containerView = self.container
        self.buttonBarView = self.barView
        
        super.viewDidLoad()
        
        let menu = UIBarButtonItem(image: Icon.cm.menu, style: .plain, target: self, action: #selector(toggleLeft))
        navigationItem.leftBarButtonItem = menu
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.navigationBar.isHidden = false
    }
    
    override func viewControllers(for pagerTabStripController: PagerTabStripViewController) -> [UIViewController] {
        return output.viewControllers
    }
    
    func showPicker() {
        let picker = UIImagePickerController()
        picker.sourceType = .photoLibrary
        picker.allowsEditing = true
        picker.delegate = self
        
        navigationController?.present(picker, animated: true, completion: nil)
    }
}

extension PagerViewController: UIImagePickerControllerDelegate {
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
        picker.dismiss(animated: true, completion: nil)
        let image = info[UIImagePickerControllerEditedImage] as! UIImage
        output.takenPhoto = image
        
        router.navigateToVerify()
    }
}
